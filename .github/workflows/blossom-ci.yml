# Copyright (c) 2022, NVIDIA CORPORATION.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# A workflow to trigger ci on hybrid infra (github + self hosted runner)
name: Blossom-CI
on:
  issue_comment:
    types: [created]
  workflow_dispatch:
      inputs:
          platform:
            description: 'runs-on argument'     
            required: false
          args:
            description: 'argument'     
            required: false
jobs:
  Check-Authorization:
    runs-on: ubuntu-latest
    outputs:
      AUTHORIZED: ${{ steps.check-authorization.outputs.authorized }}
    steps:
      - id: check-authorization
        name: Check if commentor is allowed to launch NVIDIA CI
        env:
          AUTHORIZED_USERS: ${{ secrets.AUTHORIZED_USERS }}
        if: |
          contains(${{env.AUTHORIZED_USERS }}, format('{0},', github.actor)) &&
          github.event.comment.body == '/nvidia-ci'
        run: echo "::set-output name=authorized=true"
    
    
  Authorize-Blossom:
    name: Authorize NVIDIA CI launch
    runs-on: blossom
    needs: [Check-Authorization]
    outputs:
      args: ${{ env.args }}
    
    if: contains('narendasan,', format('{0},', github.actor))
    
    steps:
      - name: Authorize Blossom launch
        run: blossom-ci
        env:
          OPERATION: 'AUTH'
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_KEY_DATA: ${{ secrets.BLOSSOM_KEY }}

        
  Vulnerability-Scan:
    name: Vulnerability scan
    needs: [Authorize-Blossom]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: ${{ fromJson(needs.Authorize-Blossom.outputs.args).repo }}
          ref: ${{ fromJson(needs.Authorize-Blossom.outputs.args).ref }}
          lfs: 'true'

      - name: Run blossom action
        uses: NVIDIA/blossom-action@main
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_KEY_DATA: ${{ secrets.BLOSSOM_KEY }}
        with:
          args1: ${{ fromJson(needs.Authorize-Blossom.outputs.args).args1 }}
          args2: ${{ fromJson(needs.Authorize-Blossom.outputs.args).args2 }}
          args3: ${{ fromJson(needs.Authorize-Blossom.outputs.args).args3 }}
          
  Launch-NVIDIA-CI:
    name: Start CI job on NVIDIA CI
    needs: [Vulnerability-Scan]
    runs-on: blossom
    steps:
      - name: Launch CI
        run: blossom-ci
        env:
          OPERATION: 'START-CI-JOB'
          CI_SERVER: ${{ secrets.CI_SERVER }}
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              
  Upload-Log:
    name: Upload log
    needs: [Launch-NVIDIA-CI]
    runs-on: blossom
    if : github.event_name == 'workflow_dispatch'
    steps:
      - name: Jenkins log for pull request ${{ fromJson(github.event.inputs.args).pr }} (click here)
        run: blossom-ci
        env:
          OPERATION: 'POST-PROCESSING'
          CI_SERVER: ${{ secrets.CI_SERVER }}
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
